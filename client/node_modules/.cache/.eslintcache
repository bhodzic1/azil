[{"/home/bernes/azil/client/src/index.js":"1","/home/bernes/azil/client/src/App.js":"2","/home/bernes/azil/client/src/reportWebVitals.js":"3","/home/bernes/azil/client/src/components/Router.js":"4","/home/bernes/azil/client/src/components/About.js":"5","/home/bernes/azil/client/src/components/navbar/NavigationBar.js":"6","/home/bernes/azil/client/src/components/login/Login.js":"7","/home/bernes/azil/client/src/components/signUp/SignUp.js":"8","/home/bernes/azil/client/src/components/registerAnimal/RegisterAnimal.js":"9","/home/bernes/azil/client/src/pages/Home.js":"10","/home/bernes/azil/client/src/context/AzilContext.js":"11"},{"size":594,"mtime":1625610959264,"results":"12","hashOfConfig":"13"},{"size":124,"mtime":1618311941731,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1618309986791,"results":"15","hashOfConfig":"13"},{"size":881,"mtime":1625605207824,"results":"16","hashOfConfig":"13"},{"size":245,"mtime":1618313824382,"results":"17","hashOfConfig":"13"},{"size":3839,"mtime":1625498376610,"results":"18","hashOfConfig":"13"},{"size":3763,"mtime":1618435312387,"results":"19","hashOfConfig":"13"},{"size":8279,"mtime":1625520420061,"results":"20","hashOfConfig":"13"},{"size":6353,"mtime":1625603611068,"results":"21","hashOfConfig":"13"},{"size":3157,"mtime":1628285203710,"results":"22","hashOfConfig":"13"},{"size":670,"mtime":1625755900144,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1rxco0w",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},"/home/bernes/azil/client/src/index.js",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './components/Router';\nimport { AzilProvider } from './context/AzilContext';\n\nReactDOM.render(\n  <AzilProvider>\n    <Router />\n  </AzilProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["53","54"],"/home/bernes/azil/client/src/App.js",[],"/home/bernes/azil/client/src/reportWebVitals.js",[],"/home/bernes/azil/client/src/components/Router.js",["55"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from '../App';\nimport Home from '../pages/Home';\nimport About from './About';\nimport Login from './login/Login';\nimport NavigationBar from './navbar/NavigationBar';\nimport RegisterAnimal from './registerAnimal/RegisterAnimal';\nimport SignUp from './signUp/SignUp';\n\n\nconst Router = () => {\n\n    return (\n        <BrowserRouter>\n            <NavigationBar />\n            <Switch>\n                <Route path=\"/\" component={ Home } exact />\n                <Route path=\"/about\" component={ About } />\n                <Route path=\"/login\" component={ Login } />\n                <Route path=\"/signup\" component={ SignUp } />\n                <Route path=\"/register-animal\" component={ RegisterAnimal } />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Router;","/home/bernes/azil/client/src/components/About.js",[],"/home/bernes/azil/client/src/components/navbar/NavigationBar.js",[],"/home/bernes/azil/client/src/components/login/Login.js",[],"/home/bernes/azil/client/src/components/signUp/SignUp.js",["56","57"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\nconst URL = \"http://localhost:6868/\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        border: '2px solid #360606',\n        padding: '20px',\n        borderRadius: '15px'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textField: {\n        \"&$focused\": {\n            borderColor: \"#360606\"\n        },\n        focused: {}\n    }\n    \n}));\n\nexport default function SignUp() {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const classes = useStyles();\n\n    const handleSubmit = () => {\n        /*let data = new FormData();\n        data.append(\"name\", firstName);\n        data.append(\"lastname\", lastName);\n        data.append(\"phone_number\", phone);\n        data.append(\"address\", address);\n        data.append(\"mail\", email);\n        data.append(\"username\", username);\n        data.append(\"password\", password);*/\n        var sendData = {\n            \"name\" : firstName,\n            \"lastname\" : lastName,\n            \"phone_number\" : phone,\n            \"address\" : address,\n            \"mail\" : email,\n            \"username\" : username,\n            \"password\" : password\n        }\n        axios.post(URL + 'users', sendData)\n            .then()\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\" color={\"#360606\"}>\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                variant=\"outlined\"\n                                InputProps={{\n                                    classes: {\n                                        input: classes.textField\n                                    }\n                                }}\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                value={firstName}\n                                onChange={(e) => setFirstName(e.target.value)}\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                value={lastName}\n                                onChange={(e) => setLastName(e.target.value)}\n                                autoComplete=\"lname\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"address\"\n                                label=\"Address\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                autoComplete=\"address\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"phone\"\n                                label=\"Phone number\"\n                                value={phone}\n                                onChange={(e) => setPhone(e.target.value)}\n                                autoComplete=\"phone\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                                autoComplete=\"username\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","/home/bernes/azil/client/src/components/registerAnimal/RegisterAnimal.js",["58","59"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\n\nconst URL = \"http://localhost:6868/\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        border: '2px solid #360606',\n        padding: '20px',\n        borderRadius: '15px'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textField: {\n        \"&$focused\": {\n            borderColor: \"#360606\"\n        },\n        focused: {}\n    }\n\n}));\n\nexport default function RegisterAnimal  () {\n    const [category, setCategory] = useState(\"\");\n    const [race, setRace] = useState(\"\");\n    const [age, setAge] = useState(1);\n    const [image, setImage] = useState(null);\n    const [health, setHealth] = useState(\"\");\n    \n    const classes = useStyles();\n\n    const handleSubmit = (e) => {\n        let data = new FormData();\n        data.append(\"category\", category);\n        data.append(\"race\", race);\n        data.append(\"age\", age);\n        data.append(\"health\", health);\n        data.append(\"image\", image);\n        \n        \n        axios.post(URL + 'animal', data)\n            .then()\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\" color={\"#360606\"}>\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"category\"\n                                label=\"Dog/cat\"\n                                value={category}\n                                onChange={(e) => setCategory(e.target.value)}\n                                autoComplete=\"dog\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"race\"\n                                label=\"Race\"\n                                value={race}\n                                onChange={(e) => setRace(e.target.value)}\n                                autoComplete=\"race\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"age\"\n                                label=\"Age\"\n                                value={age}\n                                onChange={(e) => setAge(e.target.value)}\n                                autoComplete=\"age\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"health\"\n                                label=\"Health status\"\n                                value={health}\n                                onChange={(e) => setHealth(e.target.value)}\n                                autoComplete=\"health\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                variant=\"contained\"\n                                component=\"label\"\n                            >\n                                Upload File\n                                <input\n                                    type=\"file\"\n                                    onChange={(e) => setImage(e.target.files[0])}\n                                    accept=\"image/*\"\n                                />\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","/home/bernes/azil/client/src/pages/Home.js",["60","61"],"/home/bernes/azil/client/src/context/AzilContext.js",["62"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst URL = \"http://localhost:6868/\";\nconst IMAGES_URL = \"http://localhost:6868/\";\n\nexport const AzilContext = React.createContext();\n\nexport const AzilProvider = (props) => {\n    const [animals, setAnimals] = useState([]);\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchData = async () => {\n        const result = await axios(URL + 'animals');\n        setAnimals(result.data.animals);\n    }\n\n    const values = {\n        animals\n    }\n\n    return (\n        <AzilContext.Provider value={values}>\n            {props.children}\n        </AzilContext.Provider>\n    )\n} \n",{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":11},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":11},{"ruleId":"63","severity":1,"message":"71","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":24},{"ruleId":"63","severity":1,"message":"72","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":16},{"ruleId":"63","severity":1,"message":"71","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":24},{"ruleId":"63","severity":1,"message":"72","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":16},{"ruleId":"63","severity":1,"message":"73","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"74","line":58,"column":15,"nodeType":"65","messageId":"66","endLine":58,"endColumn":21},{"ruleId":"63","severity":1,"message":"75","line":5,"column":7,"nodeType":"65","messageId":"66","endLine":5,"endColumn":17},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useState' is defined but never used.","'result' is assigned a value but never used.","'IMAGES_URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]