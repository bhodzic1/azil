{"ast":null,"code":"var _jsxFileName = \"/home/bernes/azil/client/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { AzilContext } from '../context/AzilContext';\n/* <img src={tile.img} alt={tile.title} /> */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:6868/\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n\nconst Home = () => {\n  _s();\n\n  const {\n    animals\n  } = useContext(AzilContext);\n  const classes = useStyles();\n  const temp = useState([{\n    category: \"cdsda\",\n    race: \"dsaa\"\n  }, {\n    category: \"dsads\",\n    race: \"dsdas\"\n  }]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const result = await axios(URL + 'animals');\n    console.log(result.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 2,\n        style: {\n          height: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, \"Subheader\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), temp.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.race,\n          subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"by: \", tile.race]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 39\n          }, this),\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `info about ${tile.race}`,\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, tile.category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"RuAA60pzTalhl2PPj0DdS0wcEpc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/bernes/azil/client/src/pages/Home.js"],"names":["React","useEffect","useState","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","axios","useContext","AzilContext","URL","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","Home","animals","classes","temp","category","race","fetchData","result","console","log","data","map","tile"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { AzilContext } from '../context/AzilContext';\n\n/* <img src={tile.img} alt={tile.title} /> */\n\nconst URL = \"http://localhost:6868/\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: 500,\n        height: 450,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\nconst Home = () => {\n    const { animals } = useContext(AzilContext);\n    const classes = useStyles();\n    const temp = useState([\n        {\n            category: \"cdsda\",\n            race: \"dsaa\"\n        },\n        {\n            category: \"dsads\",\n            race: \"dsdas\"\n        }\n    ])\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    const fetchData = async () => {\n        const result = await axios(URL + 'animals');\n        console.log(result.data)\n    }\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={180} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\">December</ListSubheader>\n                </GridListTile>\n                {temp.map((tile) => (\n                    <GridListTile key={tile.category}>\n                        \n                        <GridListTileBar\n                            title={tile.race}\n                            subtitle={<span>by: {tile.race}</span>}\n                            actionIcon={\n                                <IconButton aria-label={`info about ${tile.race}`} className={classes.icon}>\n                                    <InfoIcon />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}